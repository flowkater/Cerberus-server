<style>
.button {
 display: inline-block;
 outline: none;
 cursor: pointer;
 text-align: center;
 text-decoration: none;
 font: 14px/100% Arial, Helvetica, sans-serif;
 padding: .5em 2em .55em;
 text-shadow: 0 1px 1px rgba(0,0,0,.3);
 -webkit-border-radius: .5em;
 -moz-border-radius: .5em;
 border-radius: .5em;
 -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.2);
 -moz-box-shadow: 0 1px 2px rgba(0,0,0,.2);
 box-shadow: 0 1px 2px rgba(0,0,0,.2);
}
.button:hover {
 text-decoration: none;
}
.button:active {
 position: relative;
 top: 1px;
}
.orange {
 color: #fef4e9;
 border: solid 1px #da7c0c;
 background: #f78d1d;
 background: -webkit-gradient(linear, left top, left bottom, from(#faa51a), to(#f47a20));
 background: -moz-linear-gradient(top,  #faa51a,  #f47a20);
 filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#faa51a', endColorstr='#f47a20');
}
.orange:hover {
 background: #f47c20;
 background: -webkit-gradient(linear, left top, left bottom, from(#f88e11), to(#f06015));
 background: -moz-linear-gradient(top,  #f88e11,  #f06015);
 filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#f88e11', endColorstr='#f06015');
}
.orange:active {
 color: #fcd3a5;
 background: -webkit-gradient(linear, left top, left bottom, from(#f47a20), to(#faa51a));
 background: -moz-linear-gradient(top,  #f47a20,  #faa51a);
 filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#f47a20', endColorstr='#faa51a');
}

.fancyprogress {
  height: 25px;
  background: #ebebeb;
  border-left: 1px solid transparent;
border-right: 1px solid transparent;
  border-radius: 10px;
  cursor: pointer; cursor: hand;
}
.fancyprogress > span {
  position: relative;
  float: left;
  margin: 0px;
  min-width: 30px;
  height: 24px;
  line-height: 16px;
  text-align: right;
  background: #cccccc;
  border: 1px solid;
  border-color: #bfbfbf #b3b3b3 #9e9e9e;
  border-radius: 10px;
  background-image: -webkit-linear-gradient(top, #f0f0f0, #dbdbdb 70%, #cccccc);
  background-image: -moz-linear-gradient(top, #f0f0f0, #dbdbdb 70%, #cccccc);
  background-image: -o-linear-gradient(top, #f0f0f0, #dbdbdb 70%, #cccccc);
  background-image: linear-gradient(to bottom, #f0f0f0, #dbdbdb 70%, #cccccc);
  -webkit-box-shadow: inset 0 1px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow: inset 0 1px rgba(255, 255, 255, 0.3), 0 1px 2px rgba(0, 0, 0, 0.2);
}

.fancyprogress > span > span {
  padding: 0 8px;
  font-size: 20px;
  font-weight: bold;
  color: #404040;
  color: rgba(0, 0, 0, 0.7);
  text-shadow: 0 1px rgba(255, 255, 255, 0.4);
}
.fancyprogress > span:before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
  height: 25px;
  background: url( <%= asset_path 'progress.png' %>) 0 0 repeat-x;

  border-radius: 10px;
}
.fancyprogress .green {
  background: #85c440;
  border-color: #78b337 #6ba031 #568128;
  background-image: -webkit-linear-gradient(top, #b7dc8e, #99ce5f 70%, #85c440);
  background-image: -moz-linear-gradient(top, #b7dc8e, #99ce5f 70%, #85c440);
  background-image: -o-linear-gradient(top, #b7dc8e, #99ce5f 70%, #85c440);
  background-image: linear-gradient(to bottom, #b7dc8e, #99ce5f 70%, #85c440);
}
.fancyprogress .green2 {
  background: #568128;
  border-color: #000000 #000000 #000000;
  background-image: -webkit-linear-gradient(top, #000000, #99ce5f 50%, #000000);
  background-image: -moz-linear-gradient(top, #000000, #99ce5f 50%, #000000);
  background-image: -o-linear-gradient(top, #000000, #99ce5f 50%, #000000);
  background-image: linear-gradient(to bottom, #568128, #99ce5f 50%, #568128);
}
.fancyprogress .red {
  background: #db3a27;
  border-color: #c73321 #b12d1e #8e2418;
  background-image: -webkit-linear-gradient(top, #ea8a7e, #e15a4a 70%, #db3a27);
  background-image: -moz-linear-gradient(top, #ea8a7e, #e15a4a 70%, #db3a27);
  background-image: -o-linear-gradient(top, #ea8a7e, #e15a4a 70%, #db3a27);
  background-image: linear-gradient(to bottom, #ea8a7e, #e15a4a 70%, #db3a27);
}
.fancyprogress .red2 {
  background: #8e2418;
  border-color: #000000 #000000 #000000;
  background-image: -webkit-linear-gradient(top, #000000, #e15a4a 50%, #000000);
  background-image: -moz-linear-gradient(top, #000000, #e15a4a 50%, #000000);
  background-image: -o-linear-gradient(top, #000000, #e15a4a 50%, #000000);
  background-image: linear-gradient(to bottom, #8e2418, #e15a4a 50%, #8e2418);
}
.fancyprogress .orange {
  background: #f2b63c;
  border-color: #f0ad24 #eba310 #c5880d;
  background-image: -webkit-linear-gradient(top, #f8da9c, #f5c462 70%, #f2b63c);
  background-image: -moz-linear-gradient(top, #f8da9c, #f5c462 70%, #f2b63c);
  background-image: -o-linear-gradient(top, #f8da9c, #f5c462 70%, #f2b63c);
  background-image: linear-gradient(to bottom, #f8da9c, #f5c462 70%, #f2b63c);
}
.fancyprogress .orange2 {
  background: #c5880d;
  border-color: #000000 #000000 #000000;
  background-image: -webkit-linear-gradient(top, #000000, #f5c462 50%, #000000);
  background-image: -moz-linear-gradient(top, #000000, #f5c462 50%, #000000);
  background-image: -o-linear-gradient(top, #000000, #f5c462 50%, #000000);
  background-image: linear-gradient(to bottom, #c5880d, #f5c462 50%, #c5880d);
}
.fancyprogress .blue {
  background: #5aaadb;
  border-color: #459fd6 #3094d2 #277db2;
  background-image: -webkit-linear-gradient(top, #aed5ed, #7bbbe2 70%, #5aaadb);
  background-image: -moz-linear-gradient(top, #aed5ed, #7bbbe2 70%, #5aaadb);
  background-image: -o-linear-gradient(top, #aed5ed, #7bbbe2 70%, #5aaadb);
  background-image: linear-gradient(to bottom, #aed5ed, #7bbbe2 70%, #5aaadb);
}
.fancyprogress .blue2 {
  background: #277db2;
  border-color: #000000 #000000 #000000;
  background-image: -webkit-linear-gradient(top, #000000, #7bbbe2 50%, #000000);
  background-image: -moz-linear-gradient(top, #000000, #7bbbe2 50%, #000000);
  background-image: -o-linear-gradient(top, #000000, #7bbbe2 50%, #000000);
  background-image: linear-gradient(to bottom, #277db2, #7bbbe2 50%, #277db2);
}
/*table td img.off{
    display:none;
}
table td:hover img.off{
    display:inline;
}
table td:hover img.on{
    display:none;
}
table td label.off{
    display:none;
}
table td:hover label.off{
    display:inline;
}
table td:hover label.on{
    display:none;
}*/

.hovertd:hover {
    cursor: pointer; cursor: hand;
    background: #34C9D7;
    font-family:arial;color:white;
}
.hovertd:hover label{
    cursor: pointer; cursor: hand;
    background: #34C9D7;
    font-family:arial;color:white;
}
.hovertr:hover {
	cursor: pointer; cursor: hand;
	background: #34C9D7;
	font-family:arial;color:white;
	
}
.table-normal tbody tr:hover td {
	background-color: transparent;
	background: #34C9D7;
	font-family:arial;color:white;
}
</style>
<script type="text/javascript" >
url = ""
if(document.URL.indexOf("?") != -1){
url = document.URL.substring(document.URL.indexOf("?"),document.URL.length-1);
console.log(url)
}

 $.getJSON('reports/app_os_version_count.json'+url, function(data) {
     // you can accss your data here in the "data" variable passed to this success handler
		var myHash = {};
		myHash = data;
		var myarray = new Array();
		console.log(data)

		apparray = myHash['app']
		//console.log('app ' + apparray[0]['appversion'] + ' percents ' + apparray[0]['rate'])
		//console.log('app ' + apparray[1]['appversion'])

		osarray = myHash['os']
		//console.log('os' + osarrary[0]['osversion']+ ' percents ' + osarrary[0]['rate'])

		appversions = myHash['appversions']
		osversions = myHash['osversions']
		batterystatus = myHash['battery']
		cpustatus = myHash['cpu']
		error_status = myHash['error_status']
		memory_status = myHash['memory']
		scenario_status = myHash['scenario_test']

		//APP version
		for (var i = 0; i < apparray.length; i++) {
	    	apparray[i]['appversion']
	    	apparray[i]['rate']
	    	//console.log(i + "  " + apparray[i]['rate'])
	    	var width = apparray[i]['rate']
	    	setcolor = "orange"
	    	// if(myHash['appversions'] != null && (myHash['appversions'].indexOf(apparray[i]['appversion']))){
	    	// 	setcolor = "orange2"
	    	// }
	    	spantext = '<span onclick="myFunction(this.id)" '+'id=appid'+i+' class="'+setcolor+'" style="width:'+width+'%;">'
			$("#appversiontable").append(spantext+'<span>'+apparray[i]['appversion']+'</span>');
		}	

		//OS version
		for (var i = 0; i < osarray.length; i++) {
    	osarray[i]['osversion']
    	osarray[i]['rate']
    	var width = osarray[i]['rate']
    	spantext = '<span onclick="myFunction(this.id)" '+'id=osid'+i+' class="blue" style="width:'+width+'%;">'
		$("#osversiontable").append(spantext+'<span>'+osarray[i]['osversion']+'</span>');
		}	

		//check status
		//appversions
		if(myHash['appversions'] != null && myHash['appversions'].length > 0){ 
			//find index of appversion in myHash['app']
			for(var i=0 ; i < myHash['appversions'].length;i++){
			//console.log('find index of '+myHash['app'].indexOf(myHash['appversions']) )
				for(var j=0; j <myHash['app'].length; j++){
					if (myHash['appversions'][i] == myHash['app'][j]['appversion']){
						//then change j index version in list
						document.getElementById('appid'+j).className = "orange2";
					}
				}
			}
		}
		//osversions
		if(myHash['osversions'] != null && myHash['osversions'].length > 0){ 
			//find index of appversion in myHash['app']
			for(var i=0 ; i < myHash['osversions'].length;i++){
			//console.log('find index of '+myHash['app'].indexOf(myHash['appversions']) )
				for(var j=0; j <myHash['os'].length; j++){
					console.log(myHash['osversions'][i])
					if (myHash['osversions'][i] == myHash['os'][j]['osversion']){
						//then change j index version in list
						document.getElementById('osid'+j).className = "blue2";
					}
				}
			}
		}
		//memory
		if (myHash['memory'] == 'true' ) {
							$("#memimageid").attr({
 			 src: "<%= asset_path('c1-1.png') %>"
			});
			$("#memory").attr({
				 id: "memory2"
			});	
		}
		//cpu
		if (myHash['cpu'] == 'true' ) {
				$("#cpuimageid").attr({
 			 src: "<%= asset_path('c2.png') %>"
			});
			$("#cpu").attr({
				 id: "cpu2"
			});	
		}
		//network
		if (myHash['network'] == 'true' ) {
										$("#netimageid").attr({
 			 src: "<%= asset_path('c3.png') %>"
			});
			$("#network").attr({
				 id: "network2"
			});	
		}
		//battery
		if (myHash['battery'] == 'true' ) {
										$("#batimageid").attr({
 			 src: "<%= asset_path('c4.png') %>"
			});
			$("#battery").attr({
				 id: "battery2"
			});	
		}
		//sceanario
		if (myHash['scenario_test'] == 'true' ) {
										$("#scenarioid").attr({
 			 src: "<%= asset_path('c1-1.png') %>"
			});
			$("#scenario").attr({
				 id: "scenario2"
			});	
		}
		//status
		if (myHash['error_status'] == 'true' ) {
										$("#errorimageid").attr({
 			 src: "<%= asset_path('c1-1.png') %>"
			});
			$("#error").attr({
				 id: "error2"
			});	
		}

	//console.log(obj);
});

function myFunction(clicked_id)
{
url = ""
if(document.URL.indexOf("?") != -1){
url = document.URL.substring(document.URL.indexOf("?"),document.URL.length-1);
console.log(url)
}
	var data
 $.getJSON('reports/app_os_version_count.json'+url, function(jsondata) {


 		data = jsondata
		var myHash = {};
		myHash = data;
		var myarray = new Array();
		if (myHash['appversions'] == null) {
			myHash['appversions'] = new Array();
		}
		if (myHash['osversions'] == null) {
			myHash['osversions'] = new Array();
		}

		if(clicked_id == "osall") {

			myHash['osversions'] = [];
		}
		if(clicked_id == "appall") {

			myHash['appversions'] = [];
		}
		if(clicked_id == 'categoryall'){
				myHash['battery'] = ""
				myHash['cpu'] = ""
				myHash['memory'] = ""
				myHash['network'] = ""
		}
				//app version
		else if(clicked_id.substring(0,5) == 'appid'){

					var clicked_app_index = clicked_id.substring(5,6);	
				// if app version exist in appversions remove or not add
				clicked_app_version = myHash['app'][clicked_app_index].appversion
				var indexofremoveapp = myHash['appversions'].indexOf(clicked_app_version)
				if(indexofremoveapp != -1){
					myHash['appversions'].splice(indexofremoveapp,1)
				}
				else{
					myHash['appversions'].push(clicked_app_version)
				}
		}
				//os version
		else if(clicked_id.substring(0,4) == 'osid'){

					var clicked_os_index = clicked_id.substring(4,5);	
				// if os version exist in osversions remove or not add
				clicked_os_version = myHash['os'][clicked_os_index].osversion
				var indexofremoveos = myHash['osversions'].indexOf(clicked_os_version)
				if(indexofremoveos != -1){
					myHash['osversions'].splice(indexofremoveos,1)
				}
				else{
					myHash['osversions'].push(clicked_os_version)
				}
		}
				//memory
		else if(clicked_id == 'memory') {
			if(myHash['memory'] == null || myHash['memory'] == ''){
				myHash['memory'] = 'true'
			}
			else {
			 $("#memory").attr({
			 id: "memory2"
			});	
			}
		}
		else if(clicked_id == 'cpu') {
						if(myHash['cpu'] == null || myHash['cpu'] == ''){
				myHash['cpu'] = 'true'
			}
			else {
			 $("#cpu").attr({
			 id: "cpu2"
			});	
			}
			
		}
		else if(clicked_id == 'network') {
						if(myHash['network'] == null || myHash['network'] == ''){
				myHash['network'] = 'true'
			}
			else {
			 $("#network").attr({
			 id: "network2"
			});	
			}
			
		}
		else if(clicked_id == 'battery') {
						if(myHash['battery'] == null || myHash['battery'] == ''){
				myHash['battery'] = 'true'
			}
			else {
			 $("#battery").attr({
			 id: "battery2"
			});	
			}
			
		}
		else if(clicked_id == "yes") {
			myHash['scenario_test'] = 'true'
		}
		else if(clicked_id == "no") {
			myHash['scenario_test'] = 'false'
		}
		else if(clicked_id == 'sceanarioall'){
			myHash['scenario_test'] = ""
		}
		else if(clicked_id == 'statusall'){
			myHash['error_status'] = ""

		}
		else if(clicked_id == 'finish'){
				myHash['error_status'] = 'true'
		}
		else if(clicked_id == 'fail') {
				myHash['error_status'] = 'false'
		}
		//console.log('app ' + apparray[0]['appversion'] + ' percents ' + apparray[0]['rate'])
		//console.log('app ' + apparray[1]['appversion'])

		osarray = myHash['os']
		//console.log('os' + osarrary[0]['osversion']+ ' percents ' + osarrary[0]['rate'])

		// appversions = myHash['appversions']
		// osversions = myHash['osversions']
		// batterystatus = myHash['battery']
		// cpustatus = myHash['cpu']
		// error_status = myHash['error_status']
		// memory_status = myHash['memory']
		// scenario_status = myHash['scenario_test']
		



	// console.log('CLICKEdid'+' '+clicked_id)
	// console.log('CLICKEdid'+' '+document.getElementById(clicked_id).className)
	// if (document.getElementById(clicked_id).className == "orange"){ document.getElementById(clicked_id).className = "orange2"; }
	// else if (document.getElementById(clicked_id).className == "orange2"){ document.getElementById(clicked_id).className = "orange";}
	// else if (document.getElementById(clicked_id).className == "red"){ document.getElementById(clicked_id).className = "red2";}
	// else if (document.getElementById(clicked_id).className == "red2"){ document.getElementById(clicked_id).className = "red";}
	// else if (document.getElementById(clicked_id).className == "blue"){ document.getElementById(clicked_id).className = "blue2";}
	// else if (document.getElementById(clicked_id).className == "blue2"){ document.getElementById(clicked_id).className = "blue";}
	// else if (document.getElementById(clicked_id).className == "green"){ document.getElementById(clicked_id).className = "green2";}
	// else if (document.getElementById(clicked_id).className == "green2"){ document.getElementById(clicked_id).className = "green";}

	if (clicked_id == "cpu"){
		$("#cpuimageid").attr({
 			 src: "<%= asset_path('c2.png') %>"
			});
	}
	else if (clicked_id == "cpu2"){
		$("#cpuimageid").attr({
 			 src: "<%= asset_path('2.png') %>"
			});
	}
	else if (clicked_id =="memory"){
				$("#memimageid").attr({
 			 src: "<%= asset_path('c1-1.png') %>"
			});
	}
	else if (clicked_id =="memory2"){
				$("#memimageid").attr({
 			 src: "<%= asset_path('1.png') %>"
			});		
	}
	else if (clicked_id =="network"){
						$("#netimageid").attr({
 			 src: "<%= asset_path('c3.png') %>"
			});		
	}
	if (clicked_id =="battery"){
						$("#batimageid").attr({
 			 src: "<%= asset_path('c4.png') %>"
			});
	}
	if (clicked_id =="network2"){
						$("#netimageid").attr({
 			 src: "<%= asset_path('3.png') %>"
			});
	}
	if (clicked_id =="battery2"){
						$("#batimageid").attr({
 			 src: "<%= asset_path('4.png') %>"
			});
	}
	if (clicked_id == "yes"){
			$("#yeslable").attr({
 			 color:"red"
			});
	}

		console.log(data)

	//json request for data
	request = "reports?"
		for (var i = 0; i < myHash['appversions'].length; i++) {
			request = request+"appversions[]="+myHash['appversions'][i]+"&"
		}
		for (var i = 0; i < myHash['osversions'].length; i++) {
			request = request + 'osversions[]='+osarray[i]['osversion']+"&"
		}
		if(myHash['memory'] == 'true'){
			request = request + 'memory='+myHash['memory']+'&'
		}
		if(myHash['battery'] == 'true'){
			request = request + 'battery='+myHash['battery']+'&'
		}
		if(myHash['cpu'] == 'true'){
			request = request + 'cpu='+myHash['cpu']+'&'
		}
		if(myHash['network'] == 'true'){
			request = request + 'network='+myHash['network']+'&'
		}
		if(myHash['scenario_test'] == 'true' || myHash['scenario_test'] == 'false'){
			request = request + 'scenario='+myHash['scenario_test']+'&'
		}
		if(myHash['error_status'] == 'true' || myHash['error_status'] == 'false'){
			request = request + 'status='+myHash['error_status']+'&'
		}
		console.log("REQUEST "+request)
		window.location = request 
	});

		//

}


function myFunction2(clicked_id)
{
url = ""
if(document.URL.indexOf("?") != -1){
url = document.URL.substring(0,document.URL.indexOf("?"));
alert(url + clicked_id)
	}
}
//         



    	// var w = window.open();
        // $(w.document.body).html(data)

// $.ajax('/projects/1/reports?'+  request , function(reportlist) {
//     // you can access your data here in the "data" variable passed to this success handler
// console.log(reportlist);
// });

// $.getJSON('/projects/1/reports/app_os_version_count.json', function(data) {
//     // you can access your data here in the "data" variable passed to this success handler
// console.log(data);
// });
// }

</script>
<div class="container" id="update-div">
	<div class="container">
		<div class="row">
			<div class="area-top clearfix">
				<div class="pull-left header">
					<h3 class="title">
						Report List
					</h3>
					<h5>
						<span>
							Report List
						</span>
					</h5>
				</div>
			</div>
		</div>

		<div class="container">
			<div class="box">
				<div class="box-header">
					<div class="title">Filter</div>
				</div>
				<div class="box-content">
					<table class="table" >
						<tbody>
							<tr>
								<td>App Version</td>
								<td style="width:100px">
									<button class="button orange" id="appall" onclick="myFunction(this.id)">ALL</button>
							<!-- 		<label for="icheck1">All</label> -->
							<!-- 		</button> -->
								</td>
								<td colspan="4">
 							    <div class="fancyprogress" id='appversiontable'>

							    </div> 
							    </td>
							</tr>
							<tr>
								<td>OS Version</td>
								<td>
								
									<!-- <input type="checkbox" class="icheck" checked id="icheck1"> -->
										<button class="button orange" id="osall" onclick="myFunction(this.id)">ALL</button>
									<!-- </button> -->
								</td>
								<td colspan="4">
							    <div class="fancyprogress"  id='osversiontable'>

							    </div>
							    </td>
							</tr>
							<tr>
								<td>Category</td>
								<td >
								<!-- 	<input type="checkbox" class="icheck" checked id="icheck1"> -->
									<button class="button orange" id='categoryall' onclick="myFunction(this.id)">ALL</button>
								</td>
								<td class="hovertd" style="vertical-align:middle" onClick="myFunction(this.id)" id="memory">							
									<center>
										<img id="memimageid" src="/assets/1.png" height = '32' width = '32'>
	 								   	<br> Memory
									</center>
								</td>
								<td class="hovertd" style="vertical-align:middle" onClick="myFunction(this.id)" id="cpu">
									<center>
									<img id="cpuimageid" src="/assets/2.png" height = '32' width = '32'>
									<br> CPU
									</center>
								</td>
								<td class="hovertd" style="vertical-align:middle" onClick="myFunction(this.id)" id="network">
									<center>
										<img id="netimageid" src="/assets/3.png" height = '32' width = '32'>
									<br>Network
									</center>
								</td>
								<td class="hovertd" style="vertical-align:middle" onClick="myFunction(this.id)" id="battery">
									<center>
										<img id="batimageid" src="/assets/4.png" height = '32' width = '32'>
									 <br>Battery
									 </center>
								</td>
							</tr>
							<tr>
								<td>Scenario Test</td>
																<td class>
									<button class="button orange" id='sceanarioall' onclick="myFunction(this.id)">ALL</button>
								</td>
								<td class="hovertd" onClick="myFunction(this.id)" id="yes" style="vertical-align:middle">
									<!-- <input type="radio" name="optionsRadios[test]" class="icheck" checked id="iradio1"> -->
									<center>
                					  <label id="yeslable">Yes</label>
                					  </center>
								</td>
								<td class="hovertd" onClick="myFunction(this.id)" id="no" style="vertical-align:middle">
								<!-- 	<input type="radio" name="optionsRadios[test]" class="icheck" id="iradio2"> -->
								<center>
               						    <label class="on">No</label>
               						    </center>
								</td>
							</tr>
							<tr>
								<td>Status</td>
								<td>
								
										<button class="button orange" id='statusall' onclick="myFunction(this.id)">ALL</button>
								</td>
								<td class="hovertd" onClick="myFunction(this.id)" id='finish' style="vertical-align:middle">
								<!-- 	<input type="radio" name="optionsRadios[error]" class="icheck" id="iradio1"> -->
								<center>
              						     <label class="on">Finish</label>
              						    </center>
								</td>
								<td class="hovertd" onClick="myFunction(this.id)" id='fail' style="vertical-align:middle">
								<!-- 	<input type="radio" name="optionsRadios[error]" class="icheck" checked id="iradio4"> -->
								<center>
             					       <label class="on">Fail</label>
             					     </center>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>

		<div class="container">
			<div class="box">
				<div class="box-content">
					<table id="dataList" class="table table-normal">
						<thead>
							<tr>
								<td></td>
								<td>App version</td>
								<td>Category</td>
								<td>Status</td>
								<td>Time for Profiling</td>
								<td>Date</td>
							</tr>
						</thead>
						<tbody>

							<% @reports.each do |report| %>
								<tr class="hovertr" onclick='location.href="<%= project_report_path(@project, report) %>"'>
									<td></td>
									<td><%= report.appversion %></td>
									<td>
									<%= image_tag("1.png", :alt => "Edit Entry")  if report.categories.include? 'Memory'%>
									<%= image_tag("2.png", :alt => "Edit Entry")  if report.categories.include? 'CPU'%>
									<%= image_tag("3.png", :alt => "Edit Entry") if report.categories.include? 'Network' %>
									<%= image_tag("4.png", :alt => "Edit Entry") if report.categories.include? 'Battery'  %>
									</td>
									<td><%= report.error_status_str %></td>
									<td><%= report.time_for_profiling %></td>
									<td><%= report.created_at_date %></td>
								</tr>
							<% end  %>
						</tbody>
					</table>
				</div>
			</div>
			<div class="text-center">
				<ul class="pagination">
					<%= paginate @reports %>
				</ul>
			</div>
		</div>
	</div>
</div>